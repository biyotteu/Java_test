package face;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

// 네이버 얼굴인식 API 예제
public class APIExamFace {

    @SuppressWarnings("unused")
	public static void main(String[] args) {
        StringBuffer reqStr = new StringBuffer();
        String clientId = "DFa9mTfyDW1lAd6pNwlo";//애플리케이션 클라이언트 아이디값";
        String clientSecret = "FwdSMa4DzB";//애플리케이션 클라이언트 시크릿값";

        try {
            String paramName = "image"; // 파라미터명은 image로 지정
            String imgFile = "C:\\Users\\tjqtj\\Desktop\\db.jpg"
            		+ "";
            File uploadFile = new File(imgFile);
            String apiURL = "https://openapi.naver.com/v1/vision/celebrity"; // 유명인 얼굴 인식
            //String apiURL = "https://openapi.naver.com/v1/vision/face"; // 얼굴 감지
            URL url = new URL(apiURL);
            HttpURLConnection con = (HttpURLConnection)url.openConnection();
            con.setUseCaches(false);
            con.setDoOutput(true);
            con.setDoInput(true);
            // multipart request
            String boundary = "---" + System.currentTimeMillis() + "---";
            con.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
            con.setRequestProperty("X-Naver-Client-Id", clientId);
            con.setRequestProperty("X-Naver-Client-Secret", clientSecret);
            OutputStream outputStream = con.getOutputStream();
            PrintWriter writer = new PrintWriter(new OutputStreamWriter(outputStream, "UTF-8"), true);
            String LINE_FEED = "\r\n";
            // file 추가
            String fileName = uploadFile.getName();
            writer.append("--" + boundary).append(LINE_FEED);
            writer.append("Content-Disposition: form-data; name=\"" + paramName + "\"; filename=\"" + fileName + "\"").append(LINE_FEED);
            writer.append("Content-Type: "  + URLConnection.guessContentTypeFromName(fileName)).append(LINE_FEED);
            writer.append(LINE_FEED);
            writer.flush();
            FileInputStream inputStream = new FileInputStream(uploadFile);
            byte[] buffer = new byte[4096];
            int bytesRead = -1;
            while ((bytesRead = inputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }
            outputStream.flush();
            inputStream.close();
            writer.append(LINE_FEED).flush();
            writer.append("--" + boundary + "--").append(LINE_FEED);
            writer.close();
            BufferedReader br = null;
            int responseCode = con.getResponseCode();
            if(responseCode==200) { // 정상 호출
                br = new BufferedReader(new InputStreamReader(con.getInputStream()));
            } else {  // 에러 발생
                System.out.println("error!!!!!!! responseCode= " + responseCode);
                br = new BufferedReader(new InputStreamReader(con.getInputStream()));
            }
            String inputLine;
            if(br != null) {
                StringBuffer response = new StringBuffer();
                while ((inputLine = br.readLine()) != null) {
                    response.append(inputLine);
                }
                br.close();
                System.out.println(response.toString());
                File file = new File("C:\\Users\\tjqtj\\Desktop\\text.txt");

                try {
                  //파일에 문자열을 쓴다.
                  //하지만 이미 파일이 존재하면 모든 내용을 삭제하고 그위에 덮어쓴다
                  //파일이 손산될 우려가 있다.
                  FileWriter fw = new FileWriter(file);
                  fw.write(response.toString());
                  fw.close();
                  
                } catch (IOException e) {
                  e.printStackTrace();
                }
                
            } else {
                System.out.println("error !!!");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        class GraphicsDrawLineEx extends JFrame{
            public GraphicsDrawLineEx(){
                this.setTitle("drawLine 사용 예제");
                this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                MyPanel panel = new MyPanel();
                this.add(panel, BorderLayout.CENTER);
                this.setLocationRelativeTo(null);
                this.setSize(300,200);
                this.setVisible(true);
            }
            class MyPanel extends JPanel{
                public void paintComponent(Graphics g){
                    super.paintComponent(g);
                    g.setColor(Color.RED);
                    g.drawLine(20, 20, 100, 100);
                }
            }
        }
        new GraphicsDrawLineEx();
    }
    

    
}
